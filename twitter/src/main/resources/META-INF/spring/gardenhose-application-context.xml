<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	xmlns:int-jmx="http://www.springframework.org/schema/integration/jmx"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
		http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/integration/jmx http://www.springframework.org/schema/integration/jmx/spring-integration-jmx.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.1.xsd
		http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter-2.1.xsd		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task.xsd		
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<context:property-placeholder location="classpath:hadoop.properties,classpath:twitter-hdfs-gardenhose.properties,classpath:twitter-oauth.properties"/>
	
	<import resource="controlbus-context.xml"/>
	
	<import resource="hadoop-context.xml"/>
		
	<int:channel id="input-gardenhose">
	     <int:interceptors>
	         <int:wire-tap channel="logger-gardenhose"/>
	     </int:interceptors>	
	</int:channel>	
	
  	<int:logging-channel-adapter id="logger-gardenhose" level="INFO" 
 		expression="'payload' + payload.toString()"/>
 
 	<bean class="com.oreilly.springdata.twitter.GardenhoseChannelAdapter">
		<constructor-arg ref="twitterTemplate"/>
		<property name="outputChannel" ref="input-gardenhose"/>
	</bean>
	
	<bean id="twitterTemplate"	class="org.springframework.social.twitter.api.impl.TwitterTemplate">
		<constructor-arg value="${twitter.oauth.consumerKey}" />
		<constructor-arg value="${twitter.oauth.consumerSecret}" />
		<constructor-arg value="${twitter.oauth.accessToken}" />
		<constructor-arg value="${twitter.oauth.accessTokenSecret}" />
	</bean>	
 		
	<int:chain id="garenHosetoHadoop" input-channel="input-gardenhose">
	  <int:filter expression="payload.contains('text')"/>
	  <int:json-to-object-transformer type="org.springframework.social.twitter.api.Tweet" object-mapper="tweetObjectMapper"/>					
	  <int:transformer ref="entityAwareTweetTransformer"/>
	  <int:service-activator ref="tweetCounter" method="count"/>
	  <int:transformer ref="tweetToByteTransformer"/>
	  <!-- 
      <int:outbound-channel-adapter ref="hdfsWritingMessageHandler"/>
      -->
	</int:chain>	
	
	<bean id="tweetObjectMapper" class="com.oreilly.springdata.twitter.TweetObjectMapper"/>
	
	<bean id="entityAwareTweetTransformer" class="com.oreilly.springdata.twitter.EntityAwareTweetTransformer"/>
		
	<bean id="tweetToByteTransformer" class="com.oreilly.springdata.twitter.TweetToByteTransformer"/>
		 
	<bean id="jedisConnectionFactory" 
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/>
			
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
    		  p:connection-factory-ref="jedisConnectionFactory"/>
					 
	<bean id="tweetCounter" class="com.oreilly.springdata.redis.RedisTweetEntityCounter">
		<constructor-arg ref="stringRedisTemplate"/>
	</bean>

	<bean id="redisFlusher" class="com.oreilly.springdata.redis.RedisFlusher">
		<constructor-arg ref="stringRedisTemplate"/>
	</bean>
	
	<task:scheduler id="taskScheduler"/>

    <task:executor id="taskExecutor" pool-size="1"/>

	<task:scheduled-tasks scheduler="taskScheduler">
    	<task:scheduled ref="redisFlusher" method="flush" cron="*/2 * * * * *"/>
	</task:scheduled-tasks>


</beans>
